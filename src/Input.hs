module Input where

import           Data.List            (groupBy)
import           Data.Vector          (fromList)
import           Model                (Alignment (..), Protein (..))
import           MultipleSeqAlignment (scoreProteins)

mkAl :: [String] -> Alignment
mkAl input = Alignment seqs (scoreProteins seqs)
  where
    seqs = map mkSeq input
    mkSeq str = Protein (aa str) (gps str) (1 / seed)
    seed =
      if denominator == 0
        then 1
        else numerator / denominator
    numerator = fromIntegral (sum (map snd (concatMap gps input)))
    denominator = fromIntegral (length (concatMap gps input))
    aa = fromList . filter (not . isGap)
    gps = go 0 [] . groupBy (\a b -> isGap a && isGap b)
    isGap = (==) '-'
    go i acc (x:xs) =
      go
        (if isGap (head x)
           then i
           else i + 1)
        (if isGap (head x) && not (null xs)
           then (i, length x) : acc
           else acc)
        xs
    go _ acc [] = acc

simpl = mkAl ["KMMEEAABBGHGHI", "M----MABGHI", "EAA-B---BHHI"]

simpl2 = mkAl ["KMMEEAABBGHGHI", "MMA-BGHI", "EA--ABB--HH----I"]

inp = mkAl [aa1, aa2]

aa1 =
  "MASKRIPLVAGNWKMNFDHLEATYFVQKLVWLLRDAHFDFKRCEVALFPSFTSLRSVQVLVEADKLHVAYGAQSVSVTTQGAFTGDVSADMIAHLGCSYVIVGHSERRKYHPEDDANIVDQVRAVLAAGMQPILCVGESFEERRQGIELDFAVGQVRDVTRDLNEEQAAKLIVAYEPVWAIGTGMVATPQSAQDAANAIRNDLKTTFGTKVSDSVRILYGGSVTSKNAAELISQPDVDGFLIGGAALDVEELAKIARLALKSTKSRN"

aa2 =
  "MRTRYLIGNWKTNKNLKDAVSFVEQFQQNKLNYNAKIGIAPVYVHLTEIKKIISDSLLLFAQDANFIESGSYTGTVSFTQLQDIGVNNSIIGHSERRKYYNETSAVINQKLFACLKASMQVVLCIGEALGQEISFLKTDLTNCLDTIDKSLIKNLVIAYEPLWAIGTGKTATPEVANQTIKTIREYINDLYDENVANNISILYGGSVDHNNIQKLAIMEQIDGFLVGKASLEIKNFLEMARVYA"

aa3 =
  "RKYFVAANWKCNGTLESIKSLTNSFNNLDFDPSKLDVVVFPVSVHYDHTRKLLQSKFSTGIQNVSKFGNGSYTGEVSAEIAKDLNIEYVIIGHFERRKYFHETDEDVREKLQASLKNNLKAVVCFGESLEQREQNKTIEVITKQVKAFVDLIDNFDNVILVYEPLWAIGTGKTATPEQAQLVHKEIRKIVKDTCGEKQANQIRILYGGSVNTENCSSLIQQEDIDGFLVGNASLKESFVDIIKSAM"

aa4 =
  "SAKPQPIAAANWKCNGTTASIEKLVQVFNEHTISHDVQCVVAPTFVHIPLVQAKLRNPKYVISAENAIAKSGAFTGEVSMPILKDIGVHWVILGHSERRTYYGETDEIVAQKVSEACKQGFMVIACIGETLQQREANQTAKVVLSQTSAIAAKLTKDAWNQVVLAYEPVWAIGTGKVATPEQAQEVHLLLRKWVSENIGTDVAAKLRILYGGSVNAANAATLYAKPDINGFLVGGASLKPEFRDIIDATR"

aa5 =
  "APRKFFVGGNWKMNGDKKSLGELIQTLNAAKVPFTGEIVCAPPEAYLDFARLKVDPKFGVAAQNCYKVSKGAFTGEISPAMIKDCGVTWVILGHSERRHVFGESDELIGQKVSHALSEGLGVVACIGEKLDEREAGITEGVVFEVTEVIADDVKDWSKVVLAYEPVWAIGTGKTASPQQSQELHGKLRKWLKENVSETVADSVRIIYGGSVTGATCKELASEPDVDGFLVGGASLKPEFVEYKDVRQ"

aa6 =
  "MTPGIRPLVAGNWKMNGKGESLTELRAIAAGLSSDLGRKLDAVICVPATLLSRAAETLEGETVGLGGQDAHFKTSGAHTGDISPEMLKEAGATHVILGHSERRTDHHESNKLICAKTEAAWAAGLVAIVCVGETASERKAERALDVIGDQLSGSLPDGVTAENTIIAYEPIWAIGTGLTPTVQDVRAAHAFMREQLIERFGAKGAHLRLLYGGSVKPSNAAELLGVADVDGALVGGASLKAADFLAICETYRNL"

aa7 =
  "MNGNSTSIKELCSGISQVQYDTSRVAIAVFPSSVYVKEVISQLPEKVGVGLQNITFYDDGAYTGEISARMLEDIGCDYLLIGHSERRSLFAESDEDVFKKLNKIIDTTITPVVCIGESLDDRKSGKLKQVLATQLSLILENLSVEQLAKVVIAYEPVWAIGTGVVASLEQIQETHQFIRSLLAKVDERLAKNIKIVYGGSLKAENAKDILSLPDVDGGL"

aa8 =
  "MNPMQADAKQLLQEFKQLLQENEITEEKCNIGLAPVTLALTSTQAELANAARSVFTVAQDVSRFGNMGAYTGEVSAELLKDSQIEYVLIGHSERREYFAESAAILNAKAQNALNAGLKVIYCVGESLEQRESGQAEVVVLQQICDLASVVTAEQWPHIVIAYEPIWAIGTGKTASPEDAQTMHAKIREGLTQITSHGANMAILYGGSVKAENAVELAACPDINGAL"

aa9 =
  "MRKPIIAGNWKMNKTLSEAVSFVEEVKGQIPAASAVDAVVCSPALFLERLVAATEGTDLQVGAQNMHFEKNGAFTGEISPVALSDLKVGYVVLGHSERREMFAETDESVNKKTIAAFEHGLTPIVCCGETLEERESGKTFDLVAGQVTKALAGLTEEQVKATVIAYEPIWAIGTGKSSSSADANEVCAHIRKVVAEVVSPAAAEAVRIQYGGSVKPENIKEYMAQSDIDGALVGGASLEPASFLGLLGAVK"

aa10 =
  "MERKSYVFGNWKMHKTAKEAKDFLSIFCPFVKEISPASLVGIAPAFTTLSACCESIKEMDSSIWLGAQNVHQDSSGAFTGEVSLPMLQEFHVNFVLLGHSECRHIFHEEDATIALKVGAAARSGVVPVLCIGETLEARENGTTKEVLSNQLMLGLAQLPETAPVIIAYEPVWAIGTGKVASTADVQEVHAFCREVLSRIFSKEKSEIISILYGGSVKADNAEGFARCPDVDGLLVGGASLDPQGFANVLRNFNL"
